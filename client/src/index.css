@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --border: 214.3 31.8% 91.4%;
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
 
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
 
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
 
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
 
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
 
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
 
    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
 
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
 
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
 
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
 
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
 
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
 
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
  }

  * {
    border-color: hsl(var(--border));
  }

  body {
    @apply font-sans antialiased min-h-screen;
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
  }

  /* Prevent white flash during theme transitions */
  html {
    background-color: hsl(var(--background));
    transition: background-color 0.3s ease-in-out;
  }
}
@keyframes spring {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.ease-spring {
  animation: spring 0.3s ease-in-out;
}

.hover-glow {
  transition: box-shadow 0.3s ease-in-out;
}

.hover-glow:hover {
  box-shadow: 0 0 0 4px hsl(var(--ring)/0.1);
}


@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

@keyframes glow {
  0%, 100% {
    filter: drop-shadow(0 0 2px var(--primary)) drop-shadow(0 0 4px var(--primary));
  }
  50% {
    filter: drop-shadow(0 0 6px var(--primary)) drop-shadow(0 0 12px var(--primary));
  }
}

@keyframes particle {
  0% {
    transform: translate(0, 0);
    opacity: 1;
  }
  100% {
    transform: translate(var(--x, 100px), var(--y, -100px));
    opacity: 0;
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 0.5;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

@keyframes messageSlide {
  from {
    opacity: 0;
    transform: translateX(var(--slide-x, 20px));
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes typeIndicator {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

@keyframes achievementUnlock {
  0% {
    transform: scale(0.5) rotate(-10deg);
    opacity: 0;
  }
  50% {
    transform: scale(1.2) rotate(5deg);
    opacity: 1;
  }
  100% {
    transform: scale(1) rotate(0);
    opacity: 1;
  }
}

@keyframes dash {
  to {
    stroke-dashoffset: 8;
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes skeletonLoading {
  0% {
    background-color: hsl(var(--muted));
  }
  50% {
    background-color: hsl(var(--muted-foreground/0.1));
  }
  100% {
    background-color: hsl(var(--muted));
  }
}

.animate-fadeIn {
  animation: fadeIn 0.5s ease-out forwards;
}

.animate-slideIn {
  animation: slideIn 0.5s ease-out forwards;
}

.skeleton {
  animation: skeletonLoading 1.5s ease-in-out infinite;
  background-color: hsl(var(--muted));
  border-radius: var(--radius);
}

.skeleton-text {
  height: 1em;
  width: 100%;
}

.skeleton-circle {
  height: 2.5rem;
  width: 2.5rem;
  border-radius: 50%;
}

.skeleton-button {
  height: 2.25rem;
  width: 6rem;
}

/* Add smooth page transitions */
.page-transition-enter {
  opacity: 0;
  transform: translateY(10px);
}

.page-transition-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}

.page-transition-exit {
  opacity: 1;
}

.page-transition-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  transition: opacity 300ms, transform 300ms;
}


@keyframes gradientShift {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 0% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}
.animate-dash {
  stroke-dasharray: 4;
  animation: dash 1s linear infinite;
}

@keyframes progressFill {
  from {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}

@keyframes ping {
  0% {
    transform: scale(1);
    opacity: 1;
  }
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}

@keyframes staggeredFadeIn {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
    filter: blur(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
    filter: blur(0);
  }
}

.animate-staggered-fade-in {
  opacity: 0;
  animation: staggeredFadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  transform-origin: center;
  backface-visibility: hidden;
  will-change: transform, opacity;
}

.animate-staggered-fade-in > * {
  opacity: 0;
  animation: staggeredFadeIn 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-staggered-fade-in > *:nth-child(1) { animation-delay: 0.1s; }
.animate-staggered-fade-in > *:nth-child(2) { animation-delay: 0.2s; }
.animate-staggered-fade-in > *:nth-child(3) { animation-delay: 0.3s; }
.animate-staggered-fade-in > *:nth-child(4) { animation-delay: 0.4s; }
.animate-staggered-fade-in > *:nth-child(5) { animation-delay: 0.5s; }

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

.animate-particle {
  position: absolute;
  animation: particle 1s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-achievement {
  animation: achievementUnlock 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-progress {
  background: linear-gradient(
    90deg,
    var(--primary),
    var(--primary-foreground),
    var(--primary)
  );
  background-size: 200% 100%;
  animation: progressFill 2s linear infinite;
}

.animate-ripple {
  position: absolute;
  border-radius: 50%;
  animation: ripple 1s cubic-bezier(0, 0, 0.2, 1) forwards;
}

.animate-message {
  animation: messageSlide 0.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes messageSlide {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.type-indicator {
  animation: typeIndicator 1s infinite;
}

.hover-3d {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  transform-style: preserve-3d;
  perspective: 1000px;
}

.hover-3d:hover {
  transform: translateY(-5px) rotateX(5deg) rotateY(5deg);
}

.interactive-hover {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.interactive-hover:hover {
  transform: translateY(-2px);
  filter: brightness(1.1);
}

/* Critical theme styles - no transition */
:root {
  color-scheme: light dark;
  background-color: hsl(var(--background));
}

.dark {
  color-scheme: dark;
  background-color: hsl(var(--background));
}

/* Base styles with no transition */
html {
  background-color: hsl(var(--background));
  min-height: 100%;
  overflow-y: scroll;
}

body {
  min-height: 100vh;
  background-color: transparent;
}

/* Theme transition */
.theme-transition,
.theme-transition *,
.theme-transition *::before,
.theme-transition *::after {
  transition: background-color 0.1s ease-out,
              border-color 0.1s ease-out,
              color 0.1s ease-out,
              fill 0.1s ease-out,
              stroke 0.1s ease-out,
              opacity 0.1s ease-out !important;
  transition-delay: 0ms !important;
}

/* Prevent FOUC */
.theme-transition html,
.theme-transition body {
  opacity: 1 !important;
  background-color: hsl(var(--background)) !important;
}

/* Backdrop improvements */
.backdrop-blur {
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  background-color: transparent;
}
.click-feedback {
  transition: transform 0.1s cubic-bezier(0.4, 0, 0.2, 1);
}

.click-feedback:active {
  transform: scale(0.95);
}